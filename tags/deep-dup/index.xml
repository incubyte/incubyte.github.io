<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deep Dup on Incubyte Blog</title>
    <link>https://blog.incubyte.co/tags/deep-dup/</link>
    <description>Recent content in Deep Dup on Incubyte Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Â© 2024 Incubyte - All Rights Reserved</copyright>
    <lastBuildDate>Thu, 09 Nov 2023 18:20:29 +0530</lastBuildDate>
    <atom:link href="https://blog.incubyte.co/tags/deep-dup/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using dup vs deep dup in Ruby on Rails</title>
      <link>https://blog.incubyte.co/blog/ruby-on-rails-dup-vs-deep-dup/</link>
      <pubDate>Thu, 09 Nov 2023 18:20:29 +0530</pubDate>
      <guid>https://blog.incubyte.co/blog/ruby-on-rails-dup-vs-deep-dup/</guid>
      <description>&lt;p&gt;In Ruby on Rails, the &lt;code&gt;.dup&lt;/code&gt; method is commonly used to create a duplicate of an object, allowing modifications without affecting the original.&#xA;However, it&amp;rsquo;s crucial to understand its limitations, especially when dealing with nested structures.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
