<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on Rails on Incubyte Blog</title>
    <link>https://blog.incubyte.co/tags/ruby-on-rails/</link>
    <description>Recent content in Ruby on Rails on Incubyte Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>© 2025 Incubyte - All Rights Reserved</copyright>
    <lastBuildDate>Mon, 04 Nov 2024 10:35:08 +0530</lastBuildDate>
    <atom:link href="https://blog.incubyte.co/tags/ruby-on-rails/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dynamic Translations in Rails: Why Constants Can’t Adapt to Locale Changes and How to Fix It?</title>
      <link>https://blog.incubyte.co/blog/rails-dynamic-translation-constants/</link>
      <pubDate>Mon, 04 Nov 2024 10:35:08 +0530</pubDate>
      <guid>https://blog.incubyte.co/blog/rails-dynamic-translation-constants/</guid>
      <description>&lt;p&gt;In math and science a particular number or value that does not change is called a constant. In programming too, a constant typically represents a value that doesn’t change — a number, string, or any data type that remains the same throughout the application’s runtime. But what if you need to assign a dynamic, changing value to a constant? Can a constant, by its nature, ever be dynamic?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Conquer nil: Clean Up Your Rails Code with the Fear Gem</title>
      <link>https://blog.incubyte.co/blog/write-cleaner-rails-code-with-fear/</link>
      <pubDate>Mon, 04 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.incubyte.co/blog/write-cleaner-rails-code-with-fear/</guid>
      <description>&lt;p&gt;Ever found yourself drowning in a sea of &lt;code&gt;nil&lt;/code&gt; checks? Or perhaps you’ve built a fortress of &lt;code&gt;begin/rescue&lt;/code&gt;&#xA;blocks just to handle potential errors? If you’re nodding along, you’re not alone. Ruby developers often&#xA;find themselves writing defensive code: checking for nil values, handling edge cases, and wrestling with&#xA;error management. It’s like walking on eggshells, constantly fearing what might break.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Everything is an Object in Ruby: Even Classes</title>
      <link>https://blog.incubyte.co/blog/everything-is-an-object-in-ruby/</link>
      <pubDate>Wed, 18 Sep 2024 12:41:04 +0530</pubDate>
      <guid>https://blog.incubyte.co/blog/everything-is-an-object-in-ruby/</guid>
      <description>&lt;p&gt;Ruby is a pure object-oriented programming language, and one of the key features that sets it apart from many other languages is its philosophy that everything is an object. Whether you&amp;rsquo;re working with strings, numbers, arrays, or even classes themselves, everything in Ruby is treated as an object. This is a powerful concept that simplifies the language and makes it more consistent and flexible. Let&amp;rsquo;s dive deeper into what this means, especially the idea that even classes are objects in Ruby.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using dup vs deep dup in Ruby on Rails</title>
      <link>https://blog.incubyte.co/blog/ruby-on-rails-dup-vs-deep-dup/</link>
      <pubDate>Thu, 09 Nov 2023 18:20:29 +0530</pubDate>
      <guid>https://blog.incubyte.co/blog/ruby-on-rails-dup-vs-deep-dup/</guid>
      <description>&lt;p&gt;In Ruby on Rails, the &lt;code&gt;.dup&lt;/code&gt; method is commonly used to create a duplicate of an object, allowing modifications without affecting the original.&#xA;However, it&amp;rsquo;s crucial to understand its limitations, especially when dealing with nested structures.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rails RESTful API, Outside in TDD</title>
      <link>https://blog.incubyte.co/blog/rails-restapi-tdd/</link>
      <pubDate>Sat, 02 Jul 2022 02:32:46 +0530</pubDate>
      <guid>https://blog.incubyte.co/blog/rails-restapi-tdd/</guid>
      <description>&lt;h3 id=&#34;there-is-always-a-disciplined-way-to-do-things&#34;&gt;There is always a disciplined way to do things&lt;/h3&gt;&#xA;&lt;p&gt;I was waiting for the coffee dispenser to finish filling up my cup and my mind started wandering. Suddenly, I felt this rush. Was it a sense of pride? Could be. I had, just a few minutes ago, been able to solve a race-condition problem that was bugging me for a while. Sipping at the coffee I could see out the glass door, that it was raining. This is a good moment, I thought to myself. One thing I didn’t want to think about was the open tickets in the backlog. Unchallenging and menial, they bored me. With the soothing sounds of the rain in the background and the warmth of the fuel of the Gods, I was now thinking of ways I could avoid working on them!&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
