<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Siya Agarwal on Incubyte Blog</title>
    <link>https://blog.incubyte.co/authors/siya-agarwal/</link>
    <description>Recent content in Siya Agarwal on Incubyte Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>© 2025 Incubyte - All Rights Reserved</copyright>
    <lastBuildDate>Thu, 09 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.incubyte.co/authors/siya-agarwal/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Practical Approach to Test-Driven Development: Beyond Red, Green, Refactor</title>
      <link>https://blog.incubyte.co/blog/a-practical-approach-to-test-driven-development-beyond-red-green-refactor/</link>
      <pubDate>Thu, 09 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.incubyte.co/blog/a-practical-approach-to-test-driven-development-beyond-red-green-refactor/</guid>
      <description>&lt;p&gt;In the previous &lt;a href=&#34;https://blog.incubyte.co/blog/the-tale-of-tdd-a-journey-towards-reliable-software/&#34;&gt;blog&lt;/a&gt;, I shared a story about Test-Driven Development (TDD) and how it helps us create robust, maintainable software. If you haven’t read it yet, I highly recommend starting there as it introduces the philosophy behind TDD. But today, we’ll dive deeper and focus on the practical application—how to actually apply TDD in real-world development.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mastering Code Through Katas: A Developer’s Training Ground</title>
      <link>https://blog.incubyte.co/blog/mastering-code-through-katas/</link>
      <pubDate>Tue, 17 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.incubyte.co/blog/mastering-code-through-katas/</guid>
      <description>&lt;p&gt;If you’ve been around software development for a while, you’ve probably heard the term &lt;em&gt;kata&lt;/em&gt; thrown around. No, we’re not talking about karate—but the principles are surprisingly similar. In programming, a &lt;em&gt;kata&lt;/em&gt; is a coding exercise designed to improve your skills through repetition and refinement. But what exactly makes it valuable in software development, and how can it help you become a better programmer?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pair Programming: Rethinking the Role of PR Reviews</title>
      <link>https://blog.incubyte.co/blog/pair-programming-rethinking-the-role-of-pr-reviews/</link>
      <pubDate>Mon, 01 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.incubyte.co/blog/pair-programming-rethinking-the-role-of-pr-reviews/</guid>
      <description>&lt;p&gt;Pair programming is a collaborative approach where two developers work together at a single workstation, continuously reviewing each other’s code. This method is known for enhancing code quality, facilitating knowledge sharing, and reducing the need for formal pull request (PR) reviews. However, there are scenarios where a third-person review can be beneficial, even when pair programming is in place. In this blog, I’ll discuss why I favor internal reviews within the pair and treat third-person reviews as exceptions, exploring when each approach is most appropriate.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Tale of TDD: A Journey Towards Reliable Software</title>
      <link>https://blog.incubyte.co/blog/the-tale-of-tdd-a-journey-towards-reliable-software/</link>
      <pubDate>Mon, 17 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.incubyte.co/blog/the-tale-of-tdd-a-journey-towards-reliable-software/</guid>
      <description>&lt;p&gt;Once upon a time, in the vast kingdom of Software Development, there was a growing need for structures that wouldn&amp;rsquo;t crumble under pressure. Just as architects wouldn&amp;rsquo;t dream of building a skyscraper without a blueprint and rigorous checks, why should software developers? This tale unfolds the essence of Test-Driven Development (TDD) and how it champions building robust software.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
