<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Syed Mohd Mehndi on Incubyte Blog</title>
    <link>https://blog.incubyte.co/authors/syed-mohd-mehndi/</link>
    <description>Recent content in Syed Mohd Mehndi on Incubyte Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Â© 2024 Incubyte - All Rights Reserved</copyright>
    <lastBuildDate>Wed, 18 Sep 2024 12:41:04 +0530</lastBuildDate>
    <atom:link href="https://blog.incubyte.co/authors/syed-mohd-mehndi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Everything is an Object in Ruby: Even Classes</title>
      <link>https://blog.incubyte.co/blog/everything-is-an-object-in-ruby/</link>
      <pubDate>Wed, 18 Sep 2024 12:41:04 +0530</pubDate>
      <guid>https://blog.incubyte.co/blog/everything-is-an-object-in-ruby/</guid>
      <description>&lt;p&gt;Ruby is a pure object-oriented programming language, and one of the key features that sets it apart from many other languages is its philosophy that everything is an object. Whether you&amp;rsquo;re working with strings, numbers, arrays, or even classes themselves, everything in Ruby is treated as an object. This is a powerful concept that simplifies the language and makes it more consistent and flexible. Let&amp;rsquo;s dive deeper into what this means, especially the idea that even classes are objects in Ruby.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Extreme Ownership: The Catalyst for Achieving Professional Excellence</title>
      <link>https://blog.incubyte.co/blog/extreme-ownership-catalyst-for-achieving-professional-excellence/</link>
      <pubDate>Fri, 13 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.incubyte.co/blog/extreme-ownership-catalyst-for-achieving-professional-excellence/</guid>
      <description>&lt;p&gt;In the realm of software craftsmanship and professional development, certain values stand out as pillars of success. These include extreme ownership, relentless pursuit of quality with pragmatism, proactive collaboration, active pursuit of mastery, inviting and giving feedback effectively, and creating ecstatic customers. These are the &lt;a href=&#34;https://www.incubyte.co/post/succeeding-at-incubyte-our-core-values&#34;&gt;guiding principles&lt;/a&gt; that we adhere to at Incubyte. At the core of these values lies a principle that serves as a catalyst for achieving them: &lt;strong&gt;extreme ownership.&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding SQL Dialects: How Different Databases Speak Their Own SQL Language</title>
      <link>https://blog.incubyte.co/blog/understanding-sql-dialects/</link>
      <pubDate>Wed, 26 Jun 2024 11:19:22 +0530</pubDate>
      <guid>https://blog.incubyte.co/blog/understanding-sql-dialects/</guid>
      <description>&lt;p&gt;Structured Query Language or SQL is the cornerstone of database management and data manipulation. While the core SQL commands are standardized and consistent across different Database Management Systems (DBMS), each DBMS has its own dialect with unique features and terminologies. Understanding these differences can help you write more efficient and optimized SQL code tailored to each environment. Let&amp;rsquo;s explore the nuances of SQL dialects in four popular DBMSs: Oracle, SQL Server, PostgreSQL and MySQL.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using dup vs deep dup in Ruby on Rails</title>
      <link>https://blog.incubyte.co/blog/ruby-on-rails-dup-vs-deep-dup/</link>
      <pubDate>Thu, 09 Nov 2023 18:20:29 +0530</pubDate>
      <guid>https://blog.incubyte.co/blog/ruby-on-rails-dup-vs-deep-dup/</guid>
      <description>&lt;p&gt;In Ruby on Rails, the &lt;code&gt;.dup&lt;/code&gt; method is commonly used to create a duplicate of an object, allowing modifications without affecting the original.&#xA;However, it&amp;rsquo;s crucial to understand its limitations, especially when dealing with nested structures.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
